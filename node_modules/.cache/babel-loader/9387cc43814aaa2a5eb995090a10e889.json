{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ariay\\\\OneDrive\\\\Documents\\\\AppReact\\\\Yanacachi-app\\\\YanacachiApp\\\\hotel-yanacachi\\\\src\\\\pages\\\\ShopPage\\\\ShopPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ToBook from '../../components/ToBook/ToBook';\nimport \"./ShopPage.css\";\nimport { useState, useContext } from 'react';\nimport { ServicesContext } from '../../Context/Service';\nimport CustomButton from '../../components/custom-button/CustomButton';\nimport { useLocation } from 'react-router-dom';\nimport { createReservation } from '../../Firebase/Firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reservationInput = {\n  enteredDate: \"\",\n  requiredService: [],\n  idService: \"\"\n};\nconst arregloRequiredServices = [];\n\nconst ShopPage = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  //initialize checked , changes in ToBookItem\n  const checked = false; //Taking state from the last page (Home)\n\n  const {\n    state\n  } = useLocation();\n  reservationInput.idService = state;\n  console.log(state); //taking services data from context\n\n  const {\n    services\n  } = useContext(ServicesContext);\n  const [enteredDate, setEnteredDate] = useState(''); //change the object\n\n  const [enteredService, setEnteredService] = useState(reservationInput);\n  const {\n    id,\n    email,\n    password,\n    confirmPassword\n  } = enteredService;\n\n  const serviceChangeHandler = id => {\n    setEnteredService(id);\n    arregloRequiredServices.push(id);\n    setEnteredService({ ...enteredService,\n      requiredService: arregloRequiredServices\n    });\n    console.log(enteredService);\n  };\n\n  const dateChangeHandler = event => {\n    console.log(event.target.value);\n    setEnteredDate(event.target.value);\n    setEnteredService({ ...enteredService,\n      enteredDate: enteredDate\n    });\n  }; //submit information \n\n\n  const handleSubmit = async event => {\n    //prevent every default function\n    event.preventDefault(); //try to create in BD\n\n    try {\n      //creating user and doc of location in BD\n      const {\n        reservation\n      } = await createReservation(enteredService, state, enteredDate); //await createUserDocumentFromAuth(user, { displayName });\n      //resetFormFields();\n      //catching errors\n    } catch (error) {\n      console.log(\"signup\");\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: services.filter(service => service.id === state).map(_ref2 => {\n        let {\n          filterId,\n          ...otherToBookProps\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(ToBook, { ...otherToBookProps,\n          addChecked: serviceChangeHandler\n        }, state, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PUT THE DATE OF YOUR VISIT TO CHECK AVAILABILITY!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: \"2019-01-01\",\n        max: \"2022-12-31\",\n        onChange: dateChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      type: \"submit\",\n      value: \"Submit Form\",\n      onClick: handleSubmit,\n      children: \"Check disponibility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopPage, \"Q5vNkC7GftMrEfosyOnx3AY9CJs=\", false, function () {\n  return [useLocation];\n});\n\n_c = ShopPage;\nexport default ShopPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"sources":["C:/Users/ariay/OneDrive/Documents/AppReact/Yanacachi-app/YanacachiApp/hotel-yanacachi/src/pages/ShopPage/ShopPage.js"],"names":["React","ToBook","useState","useContext","ServicesContext","CustomButton","useLocation","createReservation","reservationInput","enteredDate","requiredService","idService","arregloRequiredServices","ShopPage","props","checked","state","console","log","services","setEnteredDate","enteredService","setEnteredService","id","email","password","confirmPassword","serviceChangeHandler","push","dateChangeHandler","event","target","value","handleSubmit","preventDefault","reservation","error","filter","service","map","filterId","otherToBookProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ToBook from '../../components/ToBook/ToBook';\r\nimport \"./ShopPage.css\";\r\nimport { useState, useContext } from 'react';\r\nimport { ServicesContext } from '../../Context/Service';\r\nimport CustomButton from '../../components/custom-button/CustomButton';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { createReservation } from '../../Firebase/Firebase.utils';\r\n\r\nconst reservationInput ={\r\n    enteredDate: \"\",\r\n    requiredService: [],\r\n    idService: \"\"\r\n}\r\nconst arregloRequiredServices = []\r\nconst ShopPage = ({props}) => {\r\n    //initialize checked , changes in ToBookItem\r\n    const checked = false;\r\n\r\n    //Taking state from the last page (Home)\r\n    const {state} =useLocation();\r\n    reservationInput.idService = state;\r\n    console.log(state);\r\n    //taking services data from context\r\n    const {services} = useContext(ServicesContext);\r\n    \r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    //change the object\r\n    const [enteredService, setEnteredService] = useState(reservationInput);\r\n    const {id, email, password, confirmPassword} = enteredService;\r\n\r\n    const serviceChangeHandler = (id) => {\r\n        setEnteredService(id);\r\n        arregloRequiredServices.push(id);\r\n        setEnteredService({\r\n            ...enteredService,\r\n            requiredService: arregloRequiredServices,\r\n        });\r\n        console.log(enteredService);\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        console.log(event.target.value);\r\n        setEnteredDate(event.target.value);\r\n        setEnteredService({\r\n           ...enteredService,\r\n           enteredDate: enteredDate,\r\n         });\r\n    };\r\n    //submit information \r\n    const handleSubmit = async (event) => {\r\n        //prevent every default function\r\n        event.preventDefault();\r\n       \r\n        //try to create in BD\r\n        try{\r\n            //creating user and doc of location in BD\r\n            const {reservation} = await createReservation(enteredService, state, enteredDate);\r\n\r\n            //await createUserDocumentFromAuth(user, { displayName });\r\n            //resetFormFields();\r\n\r\n        //catching errors\r\n        }catch(error){\r\n \r\n            console.log(\"signup\");\r\n            console.log(error);   \r\n        }\r\n \r\n    };\r\n    \r\n\r\n    return(\r\n        <div className='shop-page'>\r\n              <div className='shop-page'>\r\n                \r\n                {services\r\n                .filter(service => service.id===state)\r\n                .map(({filterId, ...otherToBookProps}) => (\r\n                        <ToBook key = {state} { ...otherToBookProps} addChecked = {serviceChangeHandler} />\r\n                ))}\r\n            \r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>PUT THE DATE OF YOUR VISIT TO CHECK AVAILABILITY!</label>\r\n                <input\r\n                    type='date'\r\n                    min='2019-01-01'\r\n                    max='2022-12-31'\r\n                    onChange={dateChangeHandler}\r\n                    >\r\n                </input>\r\n            </div>\r\n            <CustomButton type=\"submit\" value= \"Submit Form\" onClick={handleSubmit} >Check disponibility</CustomButton>\r\n\r\n        </div>\r\n    ) \r\n\r\n}\r\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}