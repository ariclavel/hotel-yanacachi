{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { getFirestore, getDoc, setDoc, doc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAQxnYL7L85JPqsnoANrCi_MPC_OwK0oJg\",\n  authDomain: \"yanacachidb.firebaseapp.com\",\n  projectId: \"yanacachidb\",\n  storageBucket: \"yanacachidb.appspot.com\",\n  messagingSenderId: \"202197106451\",\n  appId: \"1:202197106451:web:ccf0db0ffad997264da4e6\",\n  measurementId: \"G-55QFQ39NPM\"\n}; //initialize app\n\nconst firebaseApp = initializeApp(firebaseConfig); //every time we call a provider we need an account\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider); //esto aun no\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};","map":{"version":3,"sources":["C:/Users/ariay/OneDrive/Documents/AppReact/Yanacachi-app/YanacachiApp/hotel-yanacachi/src/Firebase/Firebase.utils.js"],"names":["initializeApp","firebase","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","getDoc","setDoc","doc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","createUserProfileDocument","userAuth","additionalData","userRef","firestore","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,cAA5B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAKO,eALP;AAMA,SAASC,YAAT,EACIC,MADJ,EAEIC,MAFJ,EAGIC,GAHJ,QAIQ,oBAJR;AAOA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,SAAS,EAAE,aAHQ;AAInBC,EAAAA,aAAa,EAAE,yBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB,C,CASE;;AACA,MAAMC,WAAW,GAAGlB,aAAa,CAACU,cAAD,CAAjC,C,CACA;;AACA,MAAMS,QAAQ,GAAG,IAAId,kBAAJ,EAAjB;AACAc,QAAQ,CAACC,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAApB;AACP,OAAO,MAAMqB,qBAAqB,GAAE,MAAMnB,eAAe,CAACkB,IAAD,EAAMH,QAAN,CAAlD,C,CAGP;;AACA,OAAO,MAAMK,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAC1E,MAAI,CAACD,QAAL,EAAc;AACV;AACH;;AAED,QAAME,OAAO,GAAGC,SAAS,CAACnB,GAAV,CAAe,SAAQgB,QAAQ,CAACI,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBT,QAA7B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAQH,KATD,CASC,OAAOY,KAAP,EAAa;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AAEH;AACJ;;AACD,SAAOd,OAAP;AACH,CA5BQ","sourcesContent":["import {initializeApp} from \"firebase/app\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport {\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithPopup,\r\n    GoogleAuthProvider\r\n} from \"firebase/auth\";\r\nimport { getFirestore,\r\n    getDoc,\r\n    setDoc,\r\n    doc,\r\n } from \"firebase/firestore\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAQxnYL7L85JPqsnoANrCi_MPC_OwK0oJg\",\r\n    authDomain: \"yanacachidb.firebaseapp.com\",\r\n    projectId: \"yanacachidb\",\r\n    storageBucket: \"yanacachidb.appspot.com\",\r\n    messagingSenderId: \"202197106451\",\r\n    appId: \"1:202197106451:web:ccf0db0ffad997264da4e6\",\r\n    measurementId: \"G-55QFQ39NPM\"\r\n  }\r\n  //initialize app\r\n  const firebaseApp = initializeApp(firebaseConfig);\r\n  //every time we call a provider we need an account\r\n  const provider = new GoogleAuthProvider();\r\n  provider.setCustomParameters({ prompt: \"select_account\"});\r\n\r\n  export const auth = getAuth();\r\n  export const signInWithGooglePopup= () => signInWithPopup(auth,provider);\r\n\r\n\r\n  //esto aun no\r\n  export const createUserProfileDocument = async(userAuth, additionalData) => {\r\n    if (!userAuth){\r\n        return;\r\n    }\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n        const {displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n        \r\n        try{\r\n            await userRef.set({\r\n              displayName,\r\n              email,\r\n              createdAt,\r\n              ...additionalData\r\n\r\n            })\r\n\r\n        }catch (error){\r\n            console.log(\"error creating user\", error.message);\r\n\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\n\r\n\r\n \r\n\r\n  \r\n\r\n\r\n  "]},"metadata":{},"sourceType":"module"}